#!/usr/bin/env ruby

require 'rubygems'
require 'bundler'
require 'methadone'
require_relative 'swift_tools'
require_relative 'csharp_2_swift'

module SwiftTools
  class Tool
    include Methadone::Main
    include Methadone::CLILogging
    include Methadone::ExitNow

    main do |cs_filename|
      unless File.exist?(cs_filename)
        exit_now! 127, "File #{cs_filename} does not exist"
      end

      cs_file = File.new(cs_filename, "r")
      swift_filename = options[:o]

      if swift_filename.nil?
        swift_file = STDOUT
      else
        swift_file = File.new(swift_filename, 'w+')
      end

      tool = Csharp2Swift.new
      tool.execute(cs_file, swift_file, options)

      unless swift_filename.nil?
        info "\"#{cs_filename}\" -> \"#{swift_filename}\""
      end

      tool.renamed_vars.each {|k,v| puts k + ' -> ' + v}
      tool.renamed_methods.each {|k,v| puts k + '() -> ' + v + '()'}
    end

    version SwiftTools::VERSION
    description %Q(This tool does a rough conversion of C# source code to Swift.  The goal of the tool
is to do most of the easy stuff that simply requires a lot of typing effort, and allow you
to concentrate on the more difficult aspects of the conversion, such as library and
framework usage.
)
    arg :cs_filename, :required
    on("-o", "--output-file SWIFT_FILENAME", "The Swift output file.")

    go!
  end
end
